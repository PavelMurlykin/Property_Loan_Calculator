import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    CallbackContext,
)
from config import BOT_TOKEN
from mortgage_calculator import calculate_mortgage

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
(
    INPUT_OBJECT_COST,
    INPUT_DOWN_PAYMENT,
    INPUT_START_DATE,
    INPUT_LOAN_TERM,
    INPUT_RATE,
    INPUT_GRACE_PERIOD,
) = range(6)


def start(update: Update) -> int:
    user = update.message.from_user
    update.message.reply_text(
        f'–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∏–ø–æ—Ç–µ–∫—É.\n'
        '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞ (—Ä—É–±.):'
    )
    return INPUT_OBJECT_COST


def input_object_cost(update: Update, context: CallbackContext) -> int:
    try:
        cost = float(update.message.text)
        context.user_data['object_cost'] = cost
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å (%):')
        return INPUT_DOWN_PAYMENT
    except ValueError:
        update.message.reply_text('‚ùå –û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.')
        return INPUT_OBJECT_COST


# ... –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —à–∞–≥–æ–≤ ...

def calculate(update: Update, context: CallbackContext) -> int:
    user_data = context.user_data
    result = calculate_mortgage(user_data)

    response = (
        'üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞:\n'
        f'‚ñ™ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: {result['monthly_payment']:.2f} —Ä—É–±.\n'
        f'‚ñ™ –û–±—â–∞—è –ø–µ—Ä–µ–ø–ª–∞—Ç–∞: {result['total_overpayment']:.2f} —Ä—É–±.\n'
        # ... –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ...
    )

    update.message.reply_text(response)
    return ConversationHandler.END


def cancel(update: Update, context: CallbackContext) -> int:
    update.message.reply_text('–†–∞—Å—á–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω.')
    return ConversationHandler.END


def main() -> None:
    updater = Updater(BOT_TOKEN)
    dispatcher = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            INPUT_OBJECT_COST: [MessageHandler(filters.text & ~filters.command, input_object_cost)],
            INPUT_DOWN_PAYMENT: [MessageHandler(filters.text & ~filters.command, input_down_payment)],
            # ... –¥—Ä—É–≥–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è ...
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    dispatcher.add_handler(conv_handler)
    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
